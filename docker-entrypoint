#!/usr/bin/env sh
set -e

DOCKER_SOCK=${DOCKER_SOCK:-/var/run/docker.sock}
TMP_DIR=/tmp/restart

# SIGTERM-handler
term_handler() {
  exit 143; # 128 + 15 -- SIGTERM
}

trap 'kill ${!}; term_handler' SIGTERM

if [ "$1" = 'autoheal' ] && [ -e ${DOCKER_SOCK} ]; then
  
  mkdir -p $TMP_DIR

  # https://docs.docker.com/engine/api/v1.25/

  # Set container selector
  if [ "$AUTOHEAL_CONTAINER_LABEL" == "all" ]; then
    selector() {
      jq -r .[].Id
    }
  else
    selector() {
      jq -r '.[] | select(.Labels["'${AUTOHEAL_CONTAINER_LABEL:=autoheal}'"] == "true") | .Id'
    }
  fi

  echo "Monitoring containers for unhealthy status"
  while true; do
    sleep ${AUTOHEAL_INTERVAL:=5}

    CONTAINERS=$(curl --no-buffer -s -XGET --unix-socket ${DOCKER_SOCK} http://localhost/containers/json | selector)
    for CONTAINER in $CONTAINERS; do
      HEALTH=$(curl --no-buffer -s -XGET --unix-socket ${DOCKER_SOCK} http://localhost/containers/${CONTAINER}/json | jq -r .State.Health.Status)
      if [ "unhealthy" = "$HEALTH" ]; then
        DATE=$(date +%d-%m-%Y" "%H:%M:%S)
        echo "$DATE Container ${CONTAINER:0:12} found to be unhealthy"
        touch "$TMP_DIR/$CONTAINER"
      fi
    done
    for CONTAINER in `ls $TMP_DIR`; do 
        DATE=$(date +%d-%m-%Y" "%H:%M:%S)
        echo "$DATE Restarting container ${CONTAINER:0:12}"
        if [[ -n $MAILTO  && -n $MAILFROM ]]; then
            NAME=$(curl --no-buffer -s -XGET --unix-socket ${DOCKER_SOCK} http://localhost/containers/${CONTAINER}/json | jq -r .Name)
            echo "$DATE Attempt to restart unhealthy container ${NAME}" | mail -s "Restart unhealthy container: ${NAME}" $MAILTO -F $MAILFROM -f $MAILFROM
        fi
        curl -f --no-buffer -s -XPOST --unix-socket ${DOCKER_SOCK} http://localhost/containers/${CONTAINER}/restart && rm "$TMP_DIR/$CONTAINER" || echo "$DATE Restarting container ${CONTAINER:0:12} failed"
    done
  done

else
  exec "$@"
fi
